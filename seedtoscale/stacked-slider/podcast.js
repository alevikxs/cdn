const cardListClass=".card-list",cardClass=".card-item",nextButtonClass=".next",prevButtonClass=".prev",prependList=function(e){let s=e.find(cardClass),t=e.find(cardClass).length-1;if(s.hasClass("activeNow")){let n=s.slice(t).addClass("transformPrev");e.find(cardListClass).prepend(n)}},appendToList=function(e){let s=e.find(cardClass);if(s.hasClass("activeNow")){let t=s.slice(0,1).removeClass("transformThis activeNow");e.find(cardListClass).append(t)}};function goNext(e){e.find(cardClass).first().removeClass("transformPrev").addClass("transformThis").next().addClass("activeNow"),setTimeout(function(){appendToList(e),stackCards(e)},200)}function goPrev(e){e.find(cardClass).removeClass("transformPrev").removeClass("activeNow").last().addClass("activeNow"),setTimeout(function(){prependList(e),stackCards(e)},150)}function touchGestures(e){let s=e.find(cardClass),t=0,n=0;s.bind("touchstart",e=>{t=e.changedTouches[0].screenX}),s.bind("touchend",s=>{(n=s.changedTouches[0].screenX)<t&&goNext(e),n>t&&goPrev(e)})}const stackCards=e=>{let s=e.find(cardClass);for(let t=0;t<s.length;t++)s[t].style.setProperty("--top-multiplier",t+5),s[t].style.zIndex=s.length-t,s[t].style.setProperty("--scale-multiplier",1-t/40)};function setupSlider(e){touchGestures(e),e.find(".next").click(function(){goNext(e)}),e.find(".prev").click(function(){goPrev(e)}),stackCards(e)}const container=$("#container1");setupSlider(container);const swiper=new Swiper(".swiper",{effect:"fade",loop:!0,autoplay:{pauseOnMouseEnter:!0},pagination:{el:$(".swiper-bullet-wrapper")[0],bulletClass:"swiper-bullet",bulletActiveClass:"swiper-bullet-active"},navigation:{nextEl:$(".swiper-next")[0],prevEl:$(".swiper-prev")[0]}});swiper.on("slideNextTransitionStart",function(){goNext(container)}),swiper.on("slidePrevTransitionStart",function(){goPrev(container)});
